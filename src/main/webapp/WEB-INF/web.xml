<web-app version="2.5"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
    http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

    <!--<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"-->
    <!--xmlns="http://java.sun.com/xml/ns/javaee"-->
    <!--xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"-->
    <!--version="2.5" metadata-complete="true">-->

    <display-name>Archetype Created Web Application</display-name>

    <welcome-file-list>
        <welcome-file>/page/pages/login.jsp</welcome-file>
    </welcome-file-list>

    <!-- SpringMVC和mybatis的配置文件 -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath*:/spring.xml,
            classpath*:/spring-mvc.xml,
            classpath*:/spring-mybatis.xml,
            classpath*:/spring-shiro.xml
        </param-value>
    </context-param>
    <listener>
        <listener-class>
            org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>


    <!-- shiro security filter -->
    <filter>
        <!-- 这里的filter-name要和spring的applicationContext-shiro.xml里的
                org.apache.shiro.spring.web.ShiroFilterFactoryBean的bean name相同 -->
        <filter-name>shiroFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>shiroFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--配置springMVC前端控制器-->
    <servlet>
        <servlet-name>springMVC</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <!--springMVC配置文件-->
            <param-value>classpath*:spring-mvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>springMVC</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!--&lt;!&ndash;-->
        <!--登录过滤器,会对指定URL执行过滤操作：如果用户没有登录，让其跳转到登录界面-->
       <!--&ndash;&gt;-->
    <!--<filter>-->
        <!--<filter-name>LoginFilter</filter-name>-->
        <!--<filter-class>LoginFilter</filter-class>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
        <!--<filter-name>LoginFilter</filter-name>-->
        <!--<url-pattern>/index</url-pattern>-->
        <!--<url-pattern>/page/pages/*</url-pattern>-->
    <!--</filter-mapping>-->

    <!--字符串乱码 -->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>



    <!--允许加载js后缀名的文件。不加以下的代码，JS文件会被spring的过滤器拦截-->
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.html</url-pattern>
        <url-pattern>*.js</url-pattern>
        <url-pattern>*.css</url-pattern>
    </servlet-mapping>




</web-app>
